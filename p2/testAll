#!/opt/homebrew/bin/bash
#LEEEEEROOOYYY JENKINSSSSS
if [ "$1" = "p1" ]; then
    TEST_DIR="./p1_testcases"
    EXPECTED_OUTCOMES_FILE="expectedResults_p1.txt"
elif [ "$1" = "p2" ]; then
    TEST_DIR="./p2_testcases"
    EXPECTED_OUTCOMES_FILE="expectedResults_p2.txt"
else
    echo "Invalid parameter. Please use 'p1' or 'p2'."
    exit 1
fi

if [[ $(make --dry-run -s) ]]
then
  echo "make thinks the interpreter is out of date and needs to be re-built"
  exit 1
fi

passedCount=0
failedCount=0

declare -A expectedResults
while IFS=' ' read -r filename outcome
do
    expectedResults["$filename"]="$outcome"
done < "$EXPECTED_OUTCOMES_FILE"

for test_file in "$TEST_DIR"/*
do

    filename=$(basename "$test_file")

    ./planModified "$test_file" > /dev/null 2>&1
    result=$?

    expectedResult=${expectedResults["$filename"]}

    if [ "$result" -eq "$expectedResult" ]; then
        echo "ðŸŸ¢ Test passed for file: $filename (Expected: $expectedResult, Actual: $result)"
        ((passedCount++))
    else
        echo "ðŸ”´ Test failed for file: $filename (Expected: $expectedResult, Actual: $result)"
        ((failedCount++))
    fi
done

echo "--------------------------------"
echo " Results "
echo "--------------------------------"
echo "Total Tests Run: $((passedCount + failedCount))"
echo "Passed: $passedCount"
echo "Failed: $failedCount"
